Index: README.mysql
===================================================================
--- README.mysql	(r√©vision 0)
+++ README.mysql	(r√©vision 2)
@@ -0,0 +1,42 @@
+MySQL Patch for ISC Dhcpd 
+Etienne Carriere <etienne.carriere@rez-gif.supelec.fr>
+
+Description of this support : 
+
+The global configuration and the subnet configuration are still defined in the 
+dhcpd.conf and will remain static but the host definitions is put in a MySQL database .
+
+
+
+
+Some steps to activate the MySQL support 
+
+- Add in the /etc/dhcpd.conf the following parameters 
+mysql-server 
+mysql-username 
+mysql-password 
+mysql-base     
+mysql-request_get_ip 
+
+The signification of the first four parameters are obvious . The fifth
+parameter is the request that will be done in order to gather the statements
+of the host pointed by the Hardware Addresse.
+
+The constraints on this argument are : 
+- it MUST return the statement in the first field (the other field are ignored)
+- it MUST contain a %s which will represent the searched Hardware Addresse . 
+
+Example : 
+
+mysql-server "localhost";
+mysql-username "dhcp";
+mysql-password "dhcp";
+mysql-base     "dhcp";
+mysql-request_get_ip "SELECT statement FROM mac_statement WHERE mac = '%s'";
+
+- The content of the statement field is the dhcp declaration without the ending semicolon . 
+
+Example :
+mac;statement
+"00:12:34:56:78:9a";"fixed-address 192.168.0.1"
+"10:12:34:56:78:9a";"fixed-address 192.168.0.2"
Index: server/Makefile.dist
===================================================================
--- server/Makefile.dist	(r√©vision 1)
+++ server/Makefile.dist	(copie de travail)
@@ -24,17 +24,18 @@
 
 CATMANPAGES = dhcpd.cat8 dhcpd.conf.cat5 dhcpd.leases.cat5
 SEDMANPAGES = dhcpd.man8 dhcpd.conf.man5 dhcpd.leases.man5
-SRCS   = dhcpd.c dhcp.c bootp.c confpars.c db.c class.c failover.c \
-	 omapi.c mdb.c stables.c salloc.c ddns.c
-OBJS   = dhcpd.o dhcp.o bootp.o confpars.o db.o class.o failover.o \
-	 omapi.o mdb.o stables.o salloc.o ddns.o
+SRCS   = mysql.c dhcpd.c dhcp.c bootp.c confpars.c db.c class.c failover.c \
+	 omapi.c mdb.c stables.c salloc.c ddns.c 
+OBJS   = mysql.o dhcpd.o dhcp.o bootp.o confpars.o db.o class.o failover.o \
+	 omapi.o mdb.o stables.o salloc.o ddns.o 
 PROG   = dhcpd
 MAN    = dhcpd.8 dhcpd.conf.5 dhcpd.leases.5
 
-INCLUDES = -I$(TOP) $(BINDINC) -I$(TOP)/includes
+INCLUDES = -I$(TOP) $(BINDINC) -I$(TOP)/includes -I$(TOP)/server
 DHCPLIB = ../common/libdhcp.a $(BINDLIB) ../omapip/libomapi.a ../dst/libdst.a
-CFLAGS = $(DEBUG) $(PREDEFINES) $(INCLUDES) $(COPTS)
+CFLAGS = $(DEBUG) $(PREDEFINES) $(INCLUDES) $(COPTS) -lmysqlclient -lm -g -Wall -DMYSQL_SUPPORT 
 
+LFLAGS =  -lmysqlclient  -lm
 all:	$(PROG) $(CATMANPAGES)
 
 install: all
Index: server/mdb.c
===================================================================
--- server/mdb.c	(r√©vision 1)
+++ server/mdb.c	(copie de travail)
@@ -36,7 +36,6 @@
 static char copyright[] =
 "$Id: mdb.c,v 1.67.2.25 2005/10/10 16:56:47 dhankins Exp $ Copyright (c) 2004-2005 Internet Systems Consortium.  All rights reserved.\n";
 #endif /* not lint */
-
 #include "dhcpd.h"
 #include "omapip/hash.h"
 
@@ -375,7 +374,11 @@
 {
 	struct host_decl *foo;
 	struct hardware h;
-
+#ifdef MYSQL_SUPPORT
+	isc_result_t ret;
+	if ((ret =get_ip_by_addr(hp,htype,hlen,haddr,file,line))==ISC_R_SUCCESS)
+		return 1;
+#endif
 	h.hlen = hlen + 1;
 	h.hbuf [0] = htype;
 	memcpy (&h.hbuf [1], haddr, hlen);
Index: server/mysql.c
===================================================================
--- server/mysql.c	(r√©vision 0)
+++ server/mysql.c	(r√©vision 2)
@@ -0,0 +1,164 @@
+#ifdef MYSQL_SUPPORT
+#include "mysql.h"
+
+MYSQL mysql;
+static char *mysql_server_ = NULL;
+static int mysql_port_ = 3306;
+static char *mysql_user_ = NULL;
+static char *mysql_pass_ = NULL;
+static char *mysql_base_ = NULL;
+static char *mysql_request_get_ip =NULL; 
+char name[]="HOST";
+
+char* get_values_from_option(int nb_option){
+	struct option_state *options;
+	struct option_cache *oc;
+	struct data_string db;
+	char *stat;
+	options = NULL;
+	option_state_allocate (&options, MDL);
+	execute_statements_in_scope ((struct binding_value **) NULL,
+                 (struct packet *) NULL, (struct lease *) NULL,
+                 (struct client_state *) NULL, (struct option_state *) NULL,
+                 options, &global_scope, root_group, (struct group *) NULL);
+      memset (&db, 0, sizeof (db));
+      oc = lookup_option (&server_universe, options, nb_option);
+      if (oc &&
+          evaluate_option_cache (&db,  (struct packet*) NULL,
+                (struct lease *) NULL, (struct client_state *) NULL,
+                options, (struct option_state *) NULL, &global_scope, oc, MDL))
+        {
+          stat = dmalloc (db.len + 1, MDL);
+          if (!stat)
+            log_fatal ("no memory for parameter %i",nb_option);
+          memcpy (stat, db.data, db.len);
+          stat[db.len] = 0;
+          data_string_forget (&db, MDL);
+        }
+	return stat;
+}
+
+
+int init (void){
+	if (mysql_server_==NULL){
+		mysql_server_=get_values_from_option(47);
+		mysql_user_=get_values_from_option(49);
+		mysql_pass_=get_values_from_option(50);
+		mysql_base_=get_values_from_option(51);
+		mysql_request_get_ip=get_values_from_option(52);
+		mysql_init(&mysql);
+#ifdef DEBUG
+		log_info(" mysql_server_ : %s\n", mysql_server_);
+		log_info(" mysql_user_ : %s\n",mysql_user_);
+		log_info(" mysql_pass_ : %s\n",mysql_pass_);
+		log_info(" mysql_base_ : %s\n",mysql_base_);
+#endif 
+	}
+	if (!mysql_real_connect(&mysql,mysql_server_,mysql_user_,mysql_pass_,mysql_base_,mysql_port_,NULL,0)){
+		log_fatal(mysql_error(&mysql));
+		return ISC_R_CONNREFUSED;
+	}
+	if(mysql_select_db(&mysql,mysql_base_)){ 
+		log_fatal(mysql_error(&mysql));
+		return ISC_R_SERVFAIL;
+	}
+
+
+	return ISC_R_SUCCESS;
+}
+
+isc_result_t get_ip_by_addr(struct host_decl **hp, int htype, unsigned hlen,
+		const unsigned char *haddr, const char *file, int line){
+	MYSQL_RES *res;
+	MYSQL_ROW row;
+	struct host_decl * host;
+	struct timeval tv1,tv2;
+	const char *val;
+	enum dhcp_token token;
+	char *query,*enc,*mac,*options_buffer;
+	struct parse *cfile= (struct parse *) NULL;
+	isc_result_t status;
+	int res1,declaration,l,i;
+	long length;
+	if (mysql_server_==NULL || mysql_ping(&mysql)){
+		init();
+	}
+	gettimeofday(&tv1,NULL);
+	mac=malloc(1+strlen(print_hw_addr (htype, hlen, haddr)));
+	if (mac==NULL)
+		return ISC_R_NOMEMORY;
+	strcpy(mac,print_hw_addr (htype, hlen, haddr));
+	enc=malloc(2*strlen(mac)+1);
+	if (enc==NULL){
+		free(mac);
+		return ISC_R_NOMEMORY;
+	}
+	mysql_real_escape_string(&mysql,enc,mac,strlen(mac));
+	free(mac);
+	length = strlen(enc)+strlen(mysql_request_get_ip)+1;
+	query=malloc(length);
+	if (query==NULL){
+		free(enc);
+		return ISC_R_NOMEMORY;
+	}
+	sprintf(query,mysql_request_get_ip,enc);
+	free(enc);
+#ifdef DEBUG
+	log_info(query);
+#endif
+	if (mysql_query(&mysql,query)){
+		free(query);
+		log_fatal(mysql_error(&mysql));
+		return ISC_R_FAILURE;
+	}
+	free(query);
+	if (!(res=mysql_store_result(&mysql))) {
+		 log_fatal(mysql_error(&mysql));
+		 return ISC_R_FAILURE;
+
+	}
+	options_buffer=malloc(2);
+	strcpy(options_buffer,"");
+	i=0;
+	while ((row=mysql_fetch_row(res))!= NULL){ 
+		l=strlen(options_buffer)+strlen(row[i])+3;
+		options_buffer=realloc(options_buffer,l);
+		if (options_buffer==NULL){
+			return ISC_R_NOMEMORY;
+		}
+		options_buffer=strcat(options_buffer,row[i]);
+		options_buffer=strcat(options_buffer,";\n");
+		i++;
+	}
+	mysql_free_result(res);
+        host = (struct host_decl *)0;
+        status = host_allocate (&host, MDL);
+	host->name=name;
+	*hp=host;
+#ifdef DEBUG
+	log_info("options passÈes :%s\n",options_buffer);
+#endif
+	res1 = new_parse (&cfile, -1, options_buffer, strlen (options_buffer),"MYSQL-HOST", 0);
+	if (res1 != ISC_R_SUCCESS){
+		free(options_buffer);
+		return ISC_R_FAILURE;
+	}
+	declaration = 0;
+	do
+		{
+		token = peek_token (&val, NULL, cfile);
+		if (token == END_OF_FILE)
+			break;
+		declaration = parse_statement (cfile, root_group, HOST_DECL, *hp, declaration);
+		} while (0); 
+
+	end_parse (&cfile);
+	free(options_buffer);
+	gettimeofday(&tv2,NULL);
+#ifdef DEBUG
+	log_info("Duration of the search : %li us",(tv2.tv_sec-tv1.tv_sec)*100000+(tv2.tv_usec-tv1.tv_usec));
+#endif
+	return ISC_R_SUCCESS;
+
+}
+#endif
Index: server/mysql.h
===================================================================
--- server/mysql.h	(r√©vision 0)
+++ server/mysql.h	(r√©vision 2)
@@ -0,0 +1,11 @@
+#ifndef MYSQL_H
+#define MYSQL_H
+#include <mysql/mysql.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include "dhcpd.h"
+#include <sys/time.h>
+#include <time.h>
+isc_result_t get_ip_by_addr(struct host_decl **hp, int htype, unsigned hlen,const unsigned char *haddr, const char *file, int line);
+#endif
Index: server/stables.c
===================================================================
--- server/stables.c	(r√©vision 1)
+++ server/stables.c	(copie de travail)
@@ -483,12 +483,23 @@
 	{ "log-facility", "Nsyslog-facilities.",	&server_universe, 44 },
 	{ "do-forward-updates", "f",			&server_universe, 45 },
 	{ "ping-timeout", "T",				&server_universe, 46 },
+#ifdef MYSQL_SUPPORT
+
+	{ "mysql-server", "t",                          &server_universe, 47 },
+        { "mysql-port", "d",                            &server_universe, 48 },
+        { "mysql-username", "t",                        &server_universe, 49 },
+        { "mysql-password", "t",                        &server_universe, 50 },
+        { "mysql-base", "t",				&server_universe, 51 },
+	{ "mysql-request_get_ip", "t",			&server_universe, 52 },
+#else
 	{ "unknown-47", "X",				&server_universe, 47 },
 	{ "unknown-48", "X",				&server_universe, 48 },
-	{ "unknown-49", "X",				&server_universe, 49 },
+	{ "unknown-'9", "X",				&server_universe, 49 },
 	{ "unknown-50", "X",				&server_universe, 50 },
 	{ "unknown-51", "X",				&server_universe, 51 },
 	{ "unknown-52", "X",				&server_universe, 52 },
+
+#endif 
 	{ "unknown-53", "X",				&server_universe, 53 },
 	{ "unknown-54", "X",				&server_universe, 54 },
 	{ "unknown-55", "X",				&server_universe, 55 },
Index: dhcpd.conf
===================================================================
--- dhcpd.conf	(r√©vision 0)
+++ dhcpd.conf	(r√©vision 2)
@@ -0,0 +1,24 @@
+mysql-server "localhost";
+mysql-username "dhcp";
+mysql-password "dhcp";
+mysql-base     "dhcp";
+mysql-request_get_ip "SELECT ip FROM ip_mac WHERE mac = '%s'";
+
+
+ddns-update-style none;
+authoritative;
+
+subnet 160.228.152.0 netmask 255.255.248.0 {
+	default-lease-time 604800;
+	max-lease-time 604800;
+	option broadcast-address 160.228.159.255;
+	option subnet-mask 255.255.248.0;
+	option routers 160.228.154.4;
+	option ntp-servers chronos.rez-gif.supelec.fr;
+	option smtp-server smtp.rez-gif.supelec.fr;
+	option domain-name-servers 160.228.152.4, 160.228.152.3;
+	option domain-name "rez-gif.supelec.fr";
+	option netbios-name-servers 160.228.120.145;
+	option netbios-node-type 2;
+}
+
